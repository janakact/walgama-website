{"version":3,"sources":["webpack:///./src/templates/category.js","webpack:///./node_modules/dom-helpers/esm/camelize.js","webpack:///./node_modules/react-bootstrap/esm/createWithBsPrefix.js","webpack:///./node_modules/react-bootstrap/esm/divWithClassName.js","webpack:///./node_modules/react-bootstrap/esm/CardContext.js","webpack:///./node_modules/react-bootstrap/esm/CardImg.js","webpack:///./node_modules/react-bootstrap/esm/Card.js"],"names":["__webpack_exports__","_ref","category","pageContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_common_Layout__WEBPACK_IMPORTED_MODULE_2__","_common_Navbar__WEBPACK_IMPORTED_MODULE_3__","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","_components_global__WEBPACK_IMPORTED_MODULE_11__","style","backgroundColor","gatsby_plugin_transition_link_AniLink__WEBPACK_IMPORTED_MODULE_12___default","hex","paintDrip","to","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","opacity","variant","textAlign","href","getCategoryRoute","categoryName","categoryNameSinhala","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","products","map","p","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","sm","md","lg","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","bg","Body","Text","_components_common_Image__WEBPACK_IMPORTED_MODULE_10__","imageProps","width","height","imageName","image","Title","name","nameSinhala","getProductRoute","rHyphen","createWithBsPrefix_pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","_temp","_ref$displayName","displayName","_ref$Component","Component","defaultProps","BsComponent","react_default","forwardRef","_ref2","ref","bsPrefix","_ref2$as","as","Tag","props","Object","objectWithoutPropertiesLoose","resolvedPrefix","ThemeProvider","esm_extends","classnames_default","divWithClassName","CardContext","createContext","CardImg","_ref$as","esm_CardImg","DivStyledAsH5","DivStyledAsH6","CardBody","Card","text","border","body","children","cardContext","react","cardHeaderBsPrefix","Provider","value","Img","Subtitle","Link","Header","Footer","ImgOverlay"],"mappings":"wOAQeA,EAAA,iBAAAC,GAAqB,IACxBC,EADwBD,EAAlBE,YACND,SAER,OACIE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,MAAO,CAAEC,gBAAiB,oBAC7BR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAASS,IAAI,OAAOC,WAAS,EAACC,GAAG,cAC7BZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQN,MAAO,CAAEO,QAAS,IAAOC,QAAQ,QAAzC,SAEJf,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAES,UAAW,WAAzB,IAAsChB,EAAAC,EAAAC,cAAA,KAAGe,KAAMC,2BAAiBpB,IAAWE,EAAAC,EAAAC,cAAA,cAAMJ,EAASqB,aAAf,KAA+BrB,EAASsB,oBAAsBpB,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAA,QAAMmB,UAAU,gBAC3JvB,EAASsB,qBAD2H,KAEvH,MAClBpB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACKxB,EAASyB,SAASC,IAAI,SAAAC,GAAC,OAAIzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAC/C7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,eAEL/B,EAAAC,EAAAC,cAAC4B,EAAA,EAAKE,KAAN,KACIhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,KAAN,KACIjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOC,WAAY,CAAEC,MAAO,IAAKC,OAAQ,KAAOC,UAAWb,EAAEc,SAEjEvC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKU,MAAN,KAAaf,EAAEgB,MACfzC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,KAAN,CAAWZ,UAAU,gBAAgBI,EAAEiB,aACvC1C,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAASS,IAAI,OAAOC,WAAS,EAACC,GAAI+B,0BAAgBlB,IAC9CzB,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQN,MAAO,CAAEO,QAAS,IAAOC,QAAQ,OAAOM,UAAU,eAA1D,WAIZrB,EAAAC,EAAAC,cAAA,sHCzC5B0C,EAAA,QCOA,IAAIC,EAAU,SAAAC,GACd,OAAAA,EAAA,GAAAC,eDPeC,ECOyBF,EDNxCE,EAAAC,QAAAL,EAAA,SAAAM,EAAAC,GACA,OAAAA,EAAAJ,iBCKwCK,MAAA,GDPzB,IAAAJ,GCUA,SAAAK,EAAAC,EAAAC,GACf,IAAA1D,OAAA,IAAA0D,EAAA,GAAkCA,EAClCC,EAAA3D,EAAA4D,YACAA,OAAA,IAAAD,EAAkDX,EAAUS,GAAAE,EAC5DE,EAAA7D,EAAA8D,UACAA,OAAA,IAAAD,EAAA,MAAAA,EACAE,EAAA/D,EAAA+D,aAEAC,EAAoBC,EAAA7D,EAAK8D,WACzB,SAAAC,EAAAC,GACA,IAAA5C,EAAA2C,EAAA3C,UACA6C,EAAAF,EAAAE,SACAC,EAAAH,EAAAI,GACAC,OAAA,IAAAF,EAAAR,EAAAQ,EACAG,EAAgBC,OAAAC,EAAA,EAAAD,CAA6BP,EAAA,+BAE7CS,EAAyBF,OAAAG,EAAA,EAAAH,CAAkBL,EAAAZ,GAC3C,OAAWQ,EAAA7D,EAAKC,cAAAmE,EAAoBE,OAAAI,EAAA,EAAAJ,CAAQ,CAC5CN,MACA5C,UAAiBuD,IAAUvD,EAAAoD,IACtBH,MAIL,OAFAT,EAAAD,eACAC,EAAAJ,cACAI,EChCgB,IAAAgB,EAAA,SAAAxD,GAChB,OAASyC,EAAA7D,EAAK8D,WAAA,SAAAtC,EAAAwC,GACd,OAAWH,EAAA7D,EAAKC,cAAA,MAAsBqE,OAAAI,EAAA,EAAAJ,CAAQ,GAAG9C,EAAA,CACjDwC,MACA5C,UAAiBuD,IAAUnD,EAAAJ,mBCNZyD,EAAAhB,EAAA7D,EAAK8E,cAAA,MCOpBC,EAAclB,EAAA7D,EAAK8D,WACnB,SAAAlE,EAAAoE,GACA,IAAAC,EAAArE,EAAAqE,SACA7C,EAAAxB,EAAAwB,UACAN,EAAAlB,EAAAkB,QACAkE,EAAApF,EAAAuE,GACAT,OAAA,IAAAsB,EAAA,MAAAA,EACAX,EAAcC,OAAAC,EAAA,EAAAD,CAA6B1E,EAAA,yCAE3CyD,EAAeiB,OAAAG,EAAA,EAAAH,CAAkBL,EAAA,YACjC,OAASJ,EAAA7D,EAAKC,cAAAyD,EAA0BY,OAAAI,EAAA,EAAAJ,CAAQ,CAChDN,MACA5C,UAAeuD,IAAU7D,EAAAuC,EAAA,IAAAvC,EAAAuC,EAAAjC,IACtBiD,MAEHU,EAAAvB,YAAA,UACAuB,EAAApB,aAnBgB,CAChB7C,QAAA,MAmBe,IAAAmE,EAAA,EChBfC,EAAoBN,EAAgB,MACpCO,EAAoBP,EAAgB,MACpCQ,EAAehC,EAAkB,aAIjCiC,EAAWxB,EAAA7D,EAAK8D,WAAA,SAAAlE,EAAAoE,GAChB,IAAAC,EAAArE,EAAAqE,SACA7C,EAAAxB,EAAAwB,UACAU,EAAAlC,EAAAkC,GACAwD,EAAA1F,EAAA0F,KACAC,EAAA3F,EAAA2F,OACAC,EAAA5F,EAAA4F,KACAC,EAAA7F,EAAA6F,SACAT,EAAApF,EAAAuE,GACAT,OAAA,IAAAsB,EAAA,MAAAA,EACAX,EAAcC,OAAAC,EAAA,EAAAD,CAA6B1E,EAAA,sEAE3CyD,EAAeiB,OAAAG,EAAA,EAAAH,CAAkBL,EAAA,QACjCyB,EAAoBpB,OAAAqB,EAAA,QAAArB,CAAO,WAC3B,OACAsB,mBAAAvC,EAAA,YAEG,CAAAA,IACH,OAASQ,EAAA7D,EAAKC,cAAe4E,EAAWgB,SAAA,CACxCC,MAAAJ,GACK7B,EAAA7D,EAAKC,cAAAyD,EAA0BY,OAAAI,EAAA,EAAAJ,CAAQ,CAC5CN,OACGK,EAAA,CACHjD,UAAeuD,IAAUvD,EAAAiC,EAAAvB,GAAA,MAAAA,EAAAwD,GAAA,QAAAA,EAAAC,GAAA,UAAAA,KACtBC,EAAU3B,EAAA7D,EAAKC,cAAAmF,EAAA,KAAAK,SAElBJ,EAAA7B,YAAA,OACA6B,EAAA1B,aA9BgB,CAChB6B,MAAA,GA8BAH,EAAAU,IAAWd,EACXI,EAAA9C,MAAaa,EAAkB,cAC/BM,UAAAwB,IAEAG,EAAAW,SAAgB5C,EAAkB,iBAClCM,UAAAyB,IAEAE,EAAAtD,KAAAqD,EACAC,EAAAY,KAAY7C,EAAkB,aAC9BM,UAAA,MAEA2B,EAAArD,KAAYoB,EAAkB,aAC9BM,UAAA,MAEA2B,EAAAa,OAAc9C,EAAkB,eAChCiC,EAAAc,OAAc/C,EAAkB,eAChCiC,EAAAe,WAAkBhD,EAAkB,oBACrBzD,EAAA","file":"component---src-templates-category-js-bfe6c1f82e00d9ee2094.js","sourcesContent":["import React from \"react\"\nimport Layout from '@common/Layout';\nimport Navbar from '@common/Navbar';\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\nimport { getCategoryRoute, getProductRoute } from \"../lib/url\";\nimport Image from \"../components/common/Image\";\nimport { Panel } from \"../components/global\";\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\";\nexport default ({ pageContext }) => {\n    const { category } = pageContext\n\n    return (\n        <Layout>\n            <Navbar />\n            <br />\n            <br />\n            <br />\n            <br />\n            <Container>\n                <Panel style={{ backgroundColor: 'rgba(0,0,0,0.1)' }}>\n                    <AniLink hex=\"#000\" paintDrip to=\"/#products\">\n                        <Button style={{ opacity: 0.8 }} variant=\"dark\" >Back</Button>\n                    </AniLink>\n                    <div style={{ textAlign: 'center' }}> <a href={getCategoryRoute(category)}><h1> {category.categoryName}  {category.categoryNameSinhala ? <span>(<span className=\"sinhala-font\">\n                        {category.categoryNameSinhala}\n                    </span>)</span> : \"\"}</h1></a></div>\n                    <Row>\n                        {category.products.map(p => <Col sm=\"12\" md=\"6\" lg=\"4\">\n                            <Card bg=\"transparent\">\n                                {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\n                                <Card.Body>\n                                    <Card.Text>\n                                        <Image imageProps={{ width: 200, height: 100 }} imageName={p.image}></Image>\n                                    </Card.Text>\n                                    <Card.Title>{p.name}</Card.Title>\n                                    <Card.Text className=\"sinhala-font\">{p.nameSinhala}</Card.Text>\n                                    <AniLink hex=\"#000\" paintDrip to={getProductRoute(p)}>\n                                        <Button style={{ opacity: 0.8 }} variant=\"dark\" className=\"float-right\">View</Button>\n                                    </AniLink>\n                                </Card.Body>\n                            </Card>\n                            <br />\n                        </Col>)\n                        }\n                    </Row>\n                </Panel>\n                {/* <div>Page {JSON.stringify(category)}</div> */}\n            </Container>\n        </Layout>\n    )\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\nvar pascalCase = function pascalCase(str) {\n  return str[0].toUpperCase() + camelize(str).slice(1);\n};\n\nexport default function createWithBsPrefix(prefix, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$displayName = _ref.displayName,\n      displayName = _ref$displayName === void 0 ? pascalCase(prefix) : _ref$displayName,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? 'div' : _ref$Component,\n      defaultProps = _ref.defaultProps;\n\n  var BsComponent = React.forwardRef( // eslint-disable-next-line react/prop-types\n  function (_ref2, ref) {\n    var className = _ref2.className,\n        bsPrefix = _ref2.bsPrefix,\n        _ref2$as = _ref2.as,\n        Tag = _ref2$as === void 0 ? Component : _ref2$as,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"className\", \"bsPrefix\", \"as\"]);\n\n    var resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return React.createElement(Tag, _extends({\n      ref: ref,\n      className: classNames(className, resolvedPrefix)\n    }, props));\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;"],"sourceRoot":""}